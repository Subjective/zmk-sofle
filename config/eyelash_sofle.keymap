#define ZMK_POINTING_DEFAULT_MOVE_VAL 1200  // 600
#define ZMK_POINTING_DEFAULT_SCRL_VAL 25   // 10

#include <input/processors.dtsi>
#include <zephyr/dt-bindings/input/input-event-codes.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/rgb.h>

&mmv_input_listener { input-processors = <&zip_xy_scaler 2 1>; };

&msc_input_listener { input-processors = <&zip_scroll_scaler 2 1>; };

&msc {
    acceleration-exponent = <1>;      // 0
    time-to-max-speed-ms = <100>;       // 300
    delay-ms = <0>;                   // 0
};

&mmv {
    time-to-max-speed-ms = <500>;
    acceleration-exponent = <1>;
    trigger-period-ms = <16>;
};

&soft_off { hold-time-ms = <2000>; };

/ {
    scroll_encoder: scroll_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&msc SCRL_DOWN>, <&msc SCRL_UP>;

        tap-ms = <100>;
    };

    behaviors {
        // Homerow mods for modifiers (SHIFT, CTRL, ALT, GUI)

        hml_mod: homerow_left_mod {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            require-prior-idle-ms = <100>;
            bindings = <&kp>, <&kp>;

            hold-trigger-key-positions = <6 7 8 9 10 11 12 19 20 21 22 23 24 25 32 33 34 35 36 37 38 45 46 47 48 49 50 51 57 58 59 60 61>;
            hold-trigger-on-release;
        };

        hmr_mod: homerow_right_mod {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            require-prior-idle-ms = <100>;
            bindings = <&kp>, <&kp>;

            hold-trigger-key-positions = <0 1 2 3 4 5 6 13 14 15 16 17 18 19 26 27 28 29 30 31 32 39 40 41 42 43 44 45 52 53 54 55 56>;
            hold-trigger-on-release;
        };

        // Homerow mods for layer switching

        hml_layer: homerow_left_layer {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            require-prior-idle-ms = <100>;
            bindings = <&mo>, <&kp>;

            hold-trigger-key-positions = <6 7 8 9 10 11 12 19 20 21 22 23 24 25 32 33 34 35 36 37 38 45 46 47 48 49 50 51 57 58 59 60 61>;
            hold-trigger-on-release;
        };

        hmr_layer: homerow_right_layer {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            require-prior-idle-ms = <100>;
            bindings = <&mo>, <&kp>;

            hold-trigger-key-positions = <0 1 2 3 4 5 6 13 14 15 16 17 18 19 26 27 28 29 30 31 32 39 40 41 42 43 44 45 52 53 54 55 56>;
            hold-trigger-on-release;
        };
    };

    combos {
        compatible = "zmk,combos";

        softoff {
            bindings = <&soft_off>;
            key-positions = <14 28 40>;
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";

        tri_layer {
            if-layers = <1 2>;
            then-layer = <3>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        base {
            bindings = <
&kp GRAVE      &kp N1     &kp N2          &kp N3             &kp N4          &kp N5       &mmv MOVE_UP     &kp N6     &kp N7          &kp N8             &kp N9    &kp N0         &kp MINUS
&kp TAB        &kp Q      &kp W           &kp E              &kp R           &kp T        &mmv MOVE_DOWN   &kp Y      &kp U           &kp I              &kp O     &kp P          &kp BACKSPACE
&mt LCTRL ESC  &kp A      &hml_layer 1 S  &hml_mod LSHIFT D  &hml_layer 2 F  &kp G        &mmv MOVE_LEFT   &kp H      &hmr_layer 2 J  &hmr_mod RSHIFT K  &kp L     &kp SEMICOLON  &kp APOS
&kp LSHFT      &kp Z      &kp X           &kp C              &kp V           &kp B        &mmv MOVE_RIGHT  &kp N      &kp M           &kp COMMA          &kp DOT   &kp FSLH       &kp RSHIFT
&kp C_MUTE     &kp LCTRL  &kp LALT        &kp LGUI           &mo 1           &kp ENTER    &mkp LCLK        &kp SPACE  &mo 2           &kp RGUI           &kp RALT  &kp RCTRL
            >;

            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOL_DN>;
            display-name = "Base";
        };

        symbols {
            bindings = <
&trans  &trans     &trans    &trans    &trans     &trans       &trans  &trans     &trans     &trans     &trans    &trans     &trans
&trans  &kp GRAVE  &kp LT    &kp GT    &kp MINUS  &kp PIPE     &trans  &kp CARET  &kp LBRC   &kp RBRC   &kp DLLR  &kp UNDER  &trans
&trans  &kp EXCL   &kp STAR  &kp FSLH  &kp EQUAL  &kp AMPS     &trans  &kp HASH   &kp LPAR   &kp RPAR   &kp SEMI  &kp DQT    &trans
&trans  &kp TILDE  &kp PLUS  &kp LBKT  &kp RBKT   &kp PRCNT    &trans  &kp AT     &kp COLON  &kp COMMA  &kp DOT   &kp SQT    &trans
&trans  &trans     &trans    &trans    &trans     &trans       &trans  &trans     &trans     &trans     &trans    &trans
            >;

            display-name = "Symbols";
            sensor-bindings = <&scroll_encoder>;
        };

        navigation {
            bindings = <
&trans  &kp F1  &kp F2  &kp F3        &kp F4  &kp F5    &trans  &kp F6    &kp F7    &kp F8  &kp F9     &kp F10        &kp F11
&trans  &trans  &kp N9  &kp N8        &kp N7  &trans    &trans  &trans    &trans    &trans  &trans     &trans         &kp F12
&trans  &trans  &kp N3  &kp NUMBER_2  &kp N1  &trans    &trans  &kp LEFT  &kp DOWN  &kp UP  &kp RIGHT  &kp BACKSPACE  &trans
&trans  &trans  &kp N6  &kp N5        &kp N4  &trans    &trans  &trans    &trans    &trans  &trans     &trans         &trans
&trans  &trans  &trans  &kp NUMBER_0  &trans  &trans    &trans  &trans    &trans    &trans  &trans     &trans
            >;

            display-name = "Navigation";
            sensor-bindings = <&scroll_encoder>;
        };

        system {
            bindings = <
&trans  &bt BT_SEL 0  &bt BT_SEL 1    &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4    &trans  &trans           &trans           &trans           &trans           &trans       &trans
&trans  &bt BT_CLR    &bt BT_CLR_ALL  &trans        &trans        &trans          &trans  &rgb_ug RGB_TOG  &rgb_ug RGB_EFR  &rgb_ug RGB_EFF  &trans           &trans       &trans
&trans  &out OUT_USB  &out OUT_BLE    &trans        &trans        &trans          &trans  &rgb_ug RGB_BRD  &rgb_ug RGB_BRI  &rgb_ug RGB_SPD  &rgb_ug RGB_SPI  &trans       &trans
&trans  &sys_reset    &trans          &bootloader   &trans        &trans          &trans  &rgb_ug RGB_HUD  &rgb_ug RGB_HUI  &sys_reset       &soft_off        &bootloader  &trans
&trans  &trans        &trans          &trans        &trans        &trans          &trans  &trans           &trans           &trans           &trans           &trans
            >;

            display-name = "System";
            sensor-bindings = <&scroll_encoder>;
        };
    };
};
